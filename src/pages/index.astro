---
import SubjectList from "../components/SubjectList.astro";
import Subject from "../components/Subject.astro";
import Results from "../components/Results.astro";
import Default from "../layouts/Default.astro";

const subjects = [
  {
    name: "John Doe",
    photo:
      "https://static.vecteezy.com/system/resources/thumbnails/003/337/584/small/default-avatar-photo-placeholder-profile-icon-vector.jpg",
    isCoder: false,
    isKiller: true,
  },
  {
    name: "Jane Doe",
    photo:
      "https://static.vecteezy.com/system/resources/thumbnails/003/337/584/small/default-avatar-photo-placeholder-profile-icon-vector.jpg",
    isCoder: true,
    isKiller: false,
  },
];
---

<Default>
  <SubjectList>
    {
      subjects.map((subject) => (
        <Subject subject={subject}>
          <button
            class="p-1 px-3 border-2 border-green-300 rounded-md uppercase text-green-300"
            data-answer="coder"
          >
            free
          </button>
          <button
            class="p-1 px-3 border-2 border-red-300 rounded-md uppercase text-red-300"
            data-answer="killer"
          >
            imprison
          </button>
        </Subject>
      ))
    }
  </SubjectList>

  <Results>
    <p id="trappedKillers" slot="trappedKillers"></p>
    <p id="trappedCoders" slot="trappedCoders"></p>
    <p id="freeKillers" slot="freeKillers"></p>
    <p id="freeCoders" slot="freeCoders"></p>
  </Results>
</Default>

<script>
  const buttons = document.querySelectorAll("button");
  const answers: any[] = [];
  const subjectsQueue = Array.from(
    document.querySelectorAll("li.subject")
  ).reverse();

  let currentSubject = subjectsQueue.pop();

  const displaySubject = (subject: any) => {
    subject.style.display = "block";
  };

  const hideSubject = (subject: any) => {
    subject.style.display = "none";
  };

  const checkIfCorrect = (answer: String, selection: String) => {
    console.log(answer, selection);
    const correct = answer === selection;
    answers.push({ isKiller: answer === "killer", guess: correct });
  };

  const rotateSubjects = (current: any, next: any) => {
    setTimeout(() => {
      hideSubject(current);

      if (next === undefined) return;

      displaySubject(next);
    }, 100);

    return next;
  };

  const getResults = () => {
    let counters = {
      trappedKillers: 0,
      trappedCoders: 0,
      freeKillers: 0,
      freeCoders: 0,
    };

    answers.forEach((answer) => {
      if (answer.isKiller && answer.guess) counters.trappedKillers += 1;
      if (answer.isKiller && !answer.guess) counters.freeKillers += 1;
      if (!answer.isKiller && !answer.guess) counters.trappedCoders += 1;
      if (!answer.isKiller && answer.guess) counters.freeCoders += 1;
    });

    return counters;
  };

  const displayResults = (results) => {
    console.log(results);
    const container = document.querySelector("#results") as HTMLElement;
    const trappedKillersParagraph = document.querySelector(
      "#trappedKillers"
    ) as HTMLElement;
    const trappedCodersParagraph = document.querySelector(
      "#trappedCoders"
    ) as HTMLElement;
    const freeKillersParagraph = document.querySelector(
      "#freeKillers"
    ) as HTMLElement;
    const freeCodersParagraph = document.querySelector(
      "#freeCoders"
    ) as HTMLElement;

    container.style.display = "block";
    trappedKillersParagraph.innerText = results.trappedKillers;
    trappedCodersParagraph.innerText = results.trappedCoders;
    freeKillersParagraph.innerText = results.freeKillers;
    freeCodersParagraph.innerText = results.freeCoders;

    console.log(results);
  };

  const select = (e: any) => {
    const parent = e.target.parentElement.parentElement.parentElement;
    const answerElement = parent.querySelector(".answer-field");
    const answer = answerElement.value;
    const selection = e.target.attributes["data-answer"].value.toLowerCase();
    const nextSubject = subjectsQueue.pop();

    if (currentSubject === undefined) return;

    checkIfCorrect(answer, selection);

    currentSubject = rotateSubjects(currentSubject, nextSubject);

    let results;

    if (currentSubject === undefined) {
      results = getResults();

      displayResults(results);
    }
  };

  buttons.forEach((btn) => {
    btn.addEventListener("click", select);
  });

  displaySubject(currentSubject);
</script>

<style>
  .answer-message {
    display: none;
    color: white;
  }
  .buttons-group button {
    margin-right: 2rem;
  }
</style>
